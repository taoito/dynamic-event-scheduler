//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace WP9_DES.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/ToDoWebRole")]
    public partial class Task : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DeadlineField;
        
        private string GroupIDField;
        
        private System.Guid IdField;
        
        private double LocLatField;
        
        private double LocLongField;
        
        private string LocNameField;
        
        private string LocationTypeField;
        
        private string NameField;
        
        private System.DateTime ReminderTimeField;
        
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Deadline {
            get {
                return this.DeadlineField;
            }
            set {
                if ((this.DeadlineField.Equals(value) != true)) {
                    this.DeadlineField = value;
                    this.RaisePropertyChanged("Deadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LocLat {
            get {
                return this.LocLatField;
            }
            set {
                if ((this.LocLatField.Equals(value) != true)) {
                    this.LocLatField = value;
                    this.RaisePropertyChanged("LocLat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LocLong {
            get {
                return this.LocLongField;
            }
            set {
                if ((this.LocLongField.Equals(value) != true)) {
                    this.LocLongField = value;
                    this.RaisePropertyChanged("LocLong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocName {
            get {
                return this.LocNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocNameField, value) != true)) {
                    this.LocNameField = value;
                    this.RaisePropertyChanged("LocName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationType {
            get {
                return this.LocationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationTypeField, value) != true)) {
                    this.LocationTypeField = value;
                    this.RaisePropertyChanged("LocationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReminderTime {
            get {
                return this.ReminderTimeField;
            }
            set {
                if ((this.ReminderTimeField.Equals(value) != true)) {
                    this.ReminderTimeField = value;
                    this.RaisePropertyChanged("ReminderTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ToDoWebRole")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string GroupIDField;
        
        private string GroupPassField;
        
        private System.Guid IdField;
        
        private string PasswordField;
        
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupPass {
            get {
                return this.GroupPassField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupPassField, value) != true)) {
                    this.GroupPassField = value;
                    this.RaisePropertyChanged("GroupPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/ToDoWebRole")]
    public partial class Location : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime ClosingTimeField;
        
        private System.Device.Location.GeoCoordinate CoordinatesField;
        
        private string LocationTypeField;
        
        private string NameField;
        
        private System.DateTime OpeningTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClosingTime {
            get {
                return this.ClosingTimeField;
            }
            set {
                if ((this.ClosingTimeField.Equals(value) != true)) {
                    this.ClosingTimeField = value;
                    this.RaisePropertyChanged("ClosingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Device.Location.GeoCoordinate Coordinates {
            get {
                return this.CoordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.CoordinatesField, value) != true)) {
                    this.CoordinatesField = value;
                    this.RaisePropertyChanged("Coordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationType {
            get {
                return this.LocationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationTypeField, value) != true)) {
                    this.LocationTypeField = value;
                    this.RaisePropertyChanged("LocationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OpeningTime {
            get {
                return this.OpeningTimeField;
            }
            set {
                if ((this.OpeningTimeField.Equals(value) != true)) {
                    this.OpeningTimeField = value;
                    this.RaisePropertyChanged("OpeningTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISchedulerService")]
    public interface ISchedulerService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISchedulerService/TestFun", ReplyAction="http://tempuri.org/ISchedulerService/TestFunResponse")]
        System.IAsyncResult BeginTestFun(System.AsyncCallback callback, object asyncState);
        
        string EndTestFun(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISchedulerService/GetTasksDueSoon", ReplyAction="http://tempuri.org/ISchedulerService/GetTasksDueSoonResponse")]
        System.IAsyncResult BeginGetTasksDueSoon(System.Collections.ObjectModel.ObservableCollection<string> GroupId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> EndGetTasksDueSoon(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISchedulerService/GetAllTasks", ReplyAction="http://tempuri.org/ISchedulerService/GetAllTasksResponse")]
        System.IAsyncResult BeginGetAllTasks(System.Collections.ObjectModel.ObservableCollection<string> GroupId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> EndGetAllTasks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISchedulerService/GetMyGroups", ReplyAction="http://tempuri.org/ISchedulerService/GetMyGroupsResponse")]
        System.IAsyncResult BeginGetMyGroups(string UserId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> EndGetMyGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISchedulerService/GetGroupMembers", ReplyAction="http://tempuri.org/ISchedulerService/GetGroupMembersResponse")]
        System.IAsyncResult BeginGetGroupMembers(string GroupId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> EndGetGroupMembers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISchedulerService/GetNearbyLocations", ReplyAction="http://tempuri.org/ISchedulerService/GetNearbyLocationsResponse")]
        System.IAsyncResult BeginGetNearbyLocations(System.Device.Location.GeoCoordinate Coordinates, float Dist, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Location> EndGetNearbyLocations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISchedulerService/AddTask", ReplyAction="http://tempuri.org/ISchedulerService/AddTaskResponse")]
        System.IAsyncResult BeginAddTask(WP9_DES.ServiceReference1.Task TheTask, System.AsyncCallback callback, object asyncState);
        
        bool EndAddTask(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISchedulerService/AddUser", ReplyAction="http://tempuri.org/ISchedulerService/AddUserResponse")]
        System.IAsyncResult BeginAddUser(WP9_DES.ServiceReference1.User TheUser, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISchedulerService/RemoveTask", ReplyAction="http://tempuri.org/ISchedulerService/RemoveTaskResponse")]
        System.IAsyncResult BeginRemoveTask(System.Guid TaskId, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveTask(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISchedulerService/RemoveUser", ReplyAction="http://tempuri.org/ISchedulerService/RemoveUserResponse")]
        System.IAsyncResult BeginRemoveUser(System.Guid U_Id, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveUser(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISchedulerServiceChannel : WP9_DES.ServiceReference1.ISchedulerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestFunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestFunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTasksDueSoonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTasksDueSoonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMyGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGroupMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGroupMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNearbyLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNearbyLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Location> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Location>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SchedulerServiceClient : System.ServiceModel.ClientBase<WP9_DES.ServiceReference1.ISchedulerService>, WP9_DES.ServiceReference1.ISchedulerService {
        
        private BeginOperationDelegate onBeginTestFunDelegate;
        
        private EndOperationDelegate onEndTestFunDelegate;
        
        private System.Threading.SendOrPostCallback onTestFunCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTasksDueSoonDelegate;
        
        private EndOperationDelegate onEndGetTasksDueSoonDelegate;
        
        private System.Threading.SendOrPostCallback onGetTasksDueSoonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTasksDelegate;
        
        private EndOperationDelegate onEndGetAllTasksDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTasksCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyGroupsDelegate;
        
        private EndOperationDelegate onEndGetMyGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGroupMembersDelegate;
        
        private EndOperationDelegate onEndGetGroupMembersDelegate;
        
        private System.Threading.SendOrPostCallback onGetGroupMembersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNearbyLocationsDelegate;
        
        private EndOperationDelegate onEndGetNearbyLocationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNearbyLocationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddTaskDelegate;
        
        private EndOperationDelegate onEndAddTaskDelegate;
        
        private System.Threading.SendOrPostCallback onAddTaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUserDelegate;
        
        private EndOperationDelegate onEndAddUserDelegate;
        
        private System.Threading.SendOrPostCallback onAddUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveTaskDelegate;
        
        private EndOperationDelegate onEndRemoveTaskDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveTaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveUserDelegate;
        
        private EndOperationDelegate onEndRemoveUserDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SchedulerServiceClient() {
        }
        
        public SchedulerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SchedulerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SchedulerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SchedulerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<TestFunCompletedEventArgs> TestFunCompleted;
        
        public event System.EventHandler<GetTasksDueSoonCompletedEventArgs> GetTasksDueSoonCompleted;
        
        public event System.EventHandler<GetAllTasksCompletedEventArgs> GetAllTasksCompleted;
        
        public event System.EventHandler<GetMyGroupsCompletedEventArgs> GetMyGroupsCompleted;
        
        public event System.EventHandler<GetGroupMembersCompletedEventArgs> GetGroupMembersCompleted;
        
        public event System.EventHandler<GetNearbyLocationsCompletedEventArgs> GetNearbyLocationsCompleted;
        
        public event System.EventHandler<AddTaskCompletedEventArgs> AddTaskCompleted;
        
        public event System.EventHandler<AddUserCompletedEventArgs> AddUserCompleted;
        
        public event System.EventHandler<RemoveTaskCompletedEventArgs> RemoveTaskCompleted;
        
        public event System.EventHandler<RemoveUserCompletedEventArgs> RemoveUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP9_DES.ServiceReference1.ISchedulerService.BeginTestFun(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestFun(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WP9_DES.ServiceReference1.ISchedulerService.EndTestFun(System.IAsyncResult result) {
            return base.Channel.EndTestFun(result);
        }
        
        private System.IAsyncResult OnBeginTestFun(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WP9_DES.ServiceReference1.ISchedulerService)(this)).BeginTestFun(callback, asyncState);
        }
        
        private object[] OnEndTestFun(System.IAsyncResult result) {
            string retVal = ((WP9_DES.ServiceReference1.ISchedulerService)(this)).EndTestFun(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestFunCompleted(object state) {
            if ((this.TestFunCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestFunCompleted(this, new TestFunCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestFunAsync() {
            this.TestFunAsync(null);
        }
        
        public void TestFunAsync(object userState) {
            if ((this.onBeginTestFunDelegate == null)) {
                this.onBeginTestFunDelegate = new BeginOperationDelegate(this.OnBeginTestFun);
            }
            if ((this.onEndTestFunDelegate == null)) {
                this.onEndTestFunDelegate = new EndOperationDelegate(this.OnEndTestFun);
            }
            if ((this.onTestFunCompletedDelegate == null)) {
                this.onTestFunCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestFunCompleted);
            }
            base.InvokeAsync(this.onBeginTestFunDelegate, null, this.onEndTestFunDelegate, this.onTestFunCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP9_DES.ServiceReference1.ISchedulerService.BeginGetTasksDueSoon(System.Collections.ObjectModel.ObservableCollection<string> GroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTasksDueSoon(GroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> WP9_DES.ServiceReference1.ISchedulerService.EndGetTasksDueSoon(System.IAsyncResult result) {
            return base.Channel.EndGetTasksDueSoon(result);
        }
        
        private System.IAsyncResult OnBeginGetTasksDueSoon(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> GroupId = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((WP9_DES.ServiceReference1.ISchedulerService)(this)).BeginGetTasksDueSoon(GroupId, callback, asyncState);
        }
        
        private object[] OnEndGetTasksDueSoon(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> retVal = ((WP9_DES.ServiceReference1.ISchedulerService)(this)).EndGetTasksDueSoon(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTasksDueSoonCompleted(object state) {
            if ((this.GetTasksDueSoonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTasksDueSoonCompleted(this, new GetTasksDueSoonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTasksDueSoonAsync(System.Collections.ObjectModel.ObservableCollection<string> GroupId) {
            this.GetTasksDueSoonAsync(GroupId, null);
        }
        
        public void GetTasksDueSoonAsync(System.Collections.ObjectModel.ObservableCollection<string> GroupId, object userState) {
            if ((this.onBeginGetTasksDueSoonDelegate == null)) {
                this.onBeginGetTasksDueSoonDelegate = new BeginOperationDelegate(this.OnBeginGetTasksDueSoon);
            }
            if ((this.onEndGetTasksDueSoonDelegate == null)) {
                this.onEndGetTasksDueSoonDelegate = new EndOperationDelegate(this.OnEndGetTasksDueSoon);
            }
            if ((this.onGetTasksDueSoonCompletedDelegate == null)) {
                this.onGetTasksDueSoonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTasksDueSoonCompleted);
            }
            base.InvokeAsync(this.onBeginGetTasksDueSoonDelegate, new object[] {
                        GroupId}, this.onEndGetTasksDueSoonDelegate, this.onGetTasksDueSoonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP9_DES.ServiceReference1.ISchedulerService.BeginGetAllTasks(System.Collections.ObjectModel.ObservableCollection<string> GroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTasks(GroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> WP9_DES.ServiceReference1.ISchedulerService.EndGetAllTasks(System.IAsyncResult result) {
            return base.Channel.EndGetAllTasks(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTasks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> GroupId = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((WP9_DES.ServiceReference1.ISchedulerService)(this)).BeginGetAllTasks(GroupId, callback, asyncState);
        }
        
        private object[] OnEndGetAllTasks(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> retVal = ((WP9_DES.ServiceReference1.ISchedulerService)(this)).EndGetAllTasks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTasksCompleted(object state) {
            if ((this.GetAllTasksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTasksCompleted(this, new GetAllTasksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTasksAsync(System.Collections.ObjectModel.ObservableCollection<string> GroupId) {
            this.GetAllTasksAsync(GroupId, null);
        }
        
        public void GetAllTasksAsync(System.Collections.ObjectModel.ObservableCollection<string> GroupId, object userState) {
            if ((this.onBeginGetAllTasksDelegate == null)) {
                this.onBeginGetAllTasksDelegate = new BeginOperationDelegate(this.OnBeginGetAllTasks);
            }
            if ((this.onEndGetAllTasksDelegate == null)) {
                this.onEndGetAllTasksDelegate = new EndOperationDelegate(this.OnEndGetAllTasks);
            }
            if ((this.onGetAllTasksCompletedDelegate == null)) {
                this.onGetAllTasksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTasksCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTasksDelegate, new object[] {
                        GroupId}, this.onEndGetAllTasksDelegate, this.onGetAllTasksCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP9_DES.ServiceReference1.ISchedulerService.BeginGetMyGroups(string UserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyGroups(UserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> WP9_DES.ServiceReference1.ISchedulerService.EndGetMyGroups(System.IAsyncResult result) {
            return base.Channel.EndGetMyGroups(result);
        }
        
        private System.IAsyncResult OnBeginGetMyGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserId = ((string)(inValues[0]));
            return ((WP9_DES.ServiceReference1.ISchedulerService)(this)).BeginGetMyGroups(UserId, callback, asyncState);
        }
        
        private object[] OnEndGetMyGroups(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> retVal = ((WP9_DES.ServiceReference1.ISchedulerService)(this)).EndGetMyGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyGroupsCompleted(object state) {
            if ((this.GetMyGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyGroupsCompleted(this, new GetMyGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyGroupsAsync(string UserId) {
            this.GetMyGroupsAsync(UserId, null);
        }
        
        public void GetMyGroupsAsync(string UserId, object userState) {
            if ((this.onBeginGetMyGroupsDelegate == null)) {
                this.onBeginGetMyGroupsDelegate = new BeginOperationDelegate(this.OnBeginGetMyGroups);
            }
            if ((this.onEndGetMyGroupsDelegate == null)) {
                this.onEndGetMyGroupsDelegate = new EndOperationDelegate(this.OnEndGetMyGroups);
            }
            if ((this.onGetMyGroupsCompletedDelegate == null)) {
                this.onGetMyGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyGroupsDelegate, new object[] {
                        UserId}, this.onEndGetMyGroupsDelegate, this.onGetMyGroupsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP9_DES.ServiceReference1.ISchedulerService.BeginGetGroupMembers(string GroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGroupMembers(GroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> WP9_DES.ServiceReference1.ISchedulerService.EndGetGroupMembers(System.IAsyncResult result) {
            return base.Channel.EndGetGroupMembers(result);
        }
        
        private System.IAsyncResult OnBeginGetGroupMembers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string GroupId = ((string)(inValues[0]));
            return ((WP9_DES.ServiceReference1.ISchedulerService)(this)).BeginGetGroupMembers(GroupId, callback, asyncState);
        }
        
        private object[] OnEndGetGroupMembers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> retVal = ((WP9_DES.ServiceReference1.ISchedulerService)(this)).EndGetGroupMembers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGroupMembersCompleted(object state) {
            if ((this.GetGroupMembersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGroupMembersCompleted(this, new GetGroupMembersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGroupMembersAsync(string GroupId) {
            this.GetGroupMembersAsync(GroupId, null);
        }
        
        public void GetGroupMembersAsync(string GroupId, object userState) {
            if ((this.onBeginGetGroupMembersDelegate == null)) {
                this.onBeginGetGroupMembersDelegate = new BeginOperationDelegate(this.OnBeginGetGroupMembers);
            }
            if ((this.onEndGetGroupMembersDelegate == null)) {
                this.onEndGetGroupMembersDelegate = new EndOperationDelegate(this.OnEndGetGroupMembers);
            }
            if ((this.onGetGroupMembersCompletedDelegate == null)) {
                this.onGetGroupMembersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGroupMembersCompleted);
            }
            base.InvokeAsync(this.onBeginGetGroupMembersDelegate, new object[] {
                        GroupId}, this.onEndGetGroupMembersDelegate, this.onGetGroupMembersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP9_DES.ServiceReference1.ISchedulerService.BeginGetNearbyLocations(System.Device.Location.GeoCoordinate Coordinates, float Dist, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNearbyLocations(Coordinates, Dist, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Location> WP9_DES.ServiceReference1.ISchedulerService.EndGetNearbyLocations(System.IAsyncResult result) {
            return base.Channel.EndGetNearbyLocations(result);
        }
        
        private System.IAsyncResult OnBeginGetNearbyLocations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Device.Location.GeoCoordinate Coordinates = ((System.Device.Location.GeoCoordinate)(inValues[0]));
            float Dist = ((float)(inValues[1]));
            return ((WP9_DES.ServiceReference1.ISchedulerService)(this)).BeginGetNearbyLocations(Coordinates, Dist, callback, asyncState);
        }
        
        private object[] OnEndGetNearbyLocations(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Location> retVal = ((WP9_DES.ServiceReference1.ISchedulerService)(this)).EndGetNearbyLocations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNearbyLocationsCompleted(object state) {
            if ((this.GetNearbyLocationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNearbyLocationsCompleted(this, new GetNearbyLocationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNearbyLocationsAsync(System.Device.Location.GeoCoordinate Coordinates, float Dist) {
            this.GetNearbyLocationsAsync(Coordinates, Dist, null);
        }
        
        public void GetNearbyLocationsAsync(System.Device.Location.GeoCoordinate Coordinates, float Dist, object userState) {
            if ((this.onBeginGetNearbyLocationsDelegate == null)) {
                this.onBeginGetNearbyLocationsDelegate = new BeginOperationDelegate(this.OnBeginGetNearbyLocations);
            }
            if ((this.onEndGetNearbyLocationsDelegate == null)) {
                this.onEndGetNearbyLocationsDelegate = new EndOperationDelegate(this.OnEndGetNearbyLocations);
            }
            if ((this.onGetNearbyLocationsCompletedDelegate == null)) {
                this.onGetNearbyLocationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNearbyLocationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNearbyLocationsDelegate, new object[] {
                        Coordinates,
                        Dist}, this.onEndGetNearbyLocationsDelegate, this.onGetNearbyLocationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP9_DES.ServiceReference1.ISchedulerService.BeginAddTask(WP9_DES.ServiceReference1.Task TheTask, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddTask(TheTask, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WP9_DES.ServiceReference1.ISchedulerService.EndAddTask(System.IAsyncResult result) {
            return base.Channel.EndAddTask(result);
        }
        
        private System.IAsyncResult OnBeginAddTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WP9_DES.ServiceReference1.Task TheTask = ((WP9_DES.ServiceReference1.Task)(inValues[0]));
            return ((WP9_DES.ServiceReference1.ISchedulerService)(this)).BeginAddTask(TheTask, callback, asyncState);
        }
        
        private object[] OnEndAddTask(System.IAsyncResult result) {
            bool retVal = ((WP9_DES.ServiceReference1.ISchedulerService)(this)).EndAddTask(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddTaskCompleted(object state) {
            if ((this.AddTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddTaskCompleted(this, new AddTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddTaskAsync(WP9_DES.ServiceReference1.Task TheTask) {
            this.AddTaskAsync(TheTask, null);
        }
        
        public void AddTaskAsync(WP9_DES.ServiceReference1.Task TheTask, object userState) {
            if ((this.onBeginAddTaskDelegate == null)) {
                this.onBeginAddTaskDelegate = new BeginOperationDelegate(this.OnBeginAddTask);
            }
            if ((this.onEndAddTaskDelegate == null)) {
                this.onEndAddTaskDelegate = new EndOperationDelegate(this.OnEndAddTask);
            }
            if ((this.onAddTaskCompletedDelegate == null)) {
                this.onAddTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddTaskCompleted);
            }
            base.InvokeAsync(this.onBeginAddTaskDelegate, new object[] {
                        TheTask}, this.onEndAddTaskDelegate, this.onAddTaskCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP9_DES.ServiceReference1.ISchedulerService.BeginAddUser(WP9_DES.ServiceReference1.User TheUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUser(TheUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WP9_DES.ServiceReference1.ISchedulerService.EndAddUser(System.IAsyncResult result) {
            return base.Channel.EndAddUser(result);
        }
        
        private System.IAsyncResult OnBeginAddUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WP9_DES.ServiceReference1.User TheUser = ((WP9_DES.ServiceReference1.User)(inValues[0]));
            return ((WP9_DES.ServiceReference1.ISchedulerService)(this)).BeginAddUser(TheUser, callback, asyncState);
        }
        
        private object[] OnEndAddUser(System.IAsyncResult result) {
            bool retVal = ((WP9_DES.ServiceReference1.ISchedulerService)(this)).EndAddUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUserCompleted(object state) {
            if ((this.AddUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUserAsync(WP9_DES.ServiceReference1.User TheUser) {
            this.AddUserAsync(TheUser, null);
        }
        
        public void AddUserAsync(WP9_DES.ServiceReference1.User TheUser, object userState) {
            if ((this.onBeginAddUserDelegate == null)) {
                this.onBeginAddUserDelegate = new BeginOperationDelegate(this.OnBeginAddUser);
            }
            if ((this.onEndAddUserDelegate == null)) {
                this.onEndAddUserDelegate = new EndOperationDelegate(this.OnEndAddUser);
            }
            if ((this.onAddUserCompletedDelegate == null)) {
                this.onAddUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUserCompleted);
            }
            base.InvokeAsync(this.onBeginAddUserDelegate, new object[] {
                        TheUser}, this.onEndAddUserDelegate, this.onAddUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP9_DES.ServiceReference1.ISchedulerService.BeginRemoveTask(System.Guid TaskId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveTask(TaskId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WP9_DES.ServiceReference1.ISchedulerService.EndRemoveTask(System.IAsyncResult result) {
            return base.Channel.EndRemoveTask(result);
        }
        
        private System.IAsyncResult OnBeginRemoveTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid TaskId = ((System.Guid)(inValues[0]));
            return ((WP9_DES.ServiceReference1.ISchedulerService)(this)).BeginRemoveTask(TaskId, callback, asyncState);
        }
        
        private object[] OnEndRemoveTask(System.IAsyncResult result) {
            bool retVal = ((WP9_DES.ServiceReference1.ISchedulerService)(this)).EndRemoveTask(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveTaskCompleted(object state) {
            if ((this.RemoveTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveTaskCompleted(this, new RemoveTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveTaskAsync(System.Guid TaskId) {
            this.RemoveTaskAsync(TaskId, null);
        }
        
        public void RemoveTaskAsync(System.Guid TaskId, object userState) {
            if ((this.onBeginRemoveTaskDelegate == null)) {
                this.onBeginRemoveTaskDelegate = new BeginOperationDelegate(this.OnBeginRemoveTask);
            }
            if ((this.onEndRemoveTaskDelegate == null)) {
                this.onEndRemoveTaskDelegate = new EndOperationDelegate(this.OnEndRemoveTask);
            }
            if ((this.onRemoveTaskCompletedDelegate == null)) {
                this.onRemoveTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveTaskCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveTaskDelegate, new object[] {
                        TaskId}, this.onEndRemoveTaskDelegate, this.onRemoveTaskCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP9_DES.ServiceReference1.ISchedulerService.BeginRemoveUser(System.Guid U_Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveUser(U_Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WP9_DES.ServiceReference1.ISchedulerService.EndRemoveUser(System.IAsyncResult result) {
            return base.Channel.EndRemoveUser(result);
        }
        
        private System.IAsyncResult OnBeginRemoveUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid U_Id = ((System.Guid)(inValues[0]));
            return ((WP9_DES.ServiceReference1.ISchedulerService)(this)).BeginRemoveUser(U_Id, callback, asyncState);
        }
        
        private object[] OnEndRemoveUser(System.IAsyncResult result) {
            bool retVal = ((WP9_DES.ServiceReference1.ISchedulerService)(this)).EndRemoveUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveUserCompleted(object state) {
            if ((this.RemoveUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveUserCompleted(this, new RemoveUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveUserAsync(System.Guid U_Id) {
            this.RemoveUserAsync(U_Id, null);
        }
        
        public void RemoveUserAsync(System.Guid U_Id, object userState) {
            if ((this.onBeginRemoveUserDelegate == null)) {
                this.onBeginRemoveUserDelegate = new BeginOperationDelegate(this.OnBeginRemoveUser);
            }
            if ((this.onEndRemoveUserDelegate == null)) {
                this.onEndRemoveUserDelegate = new EndOperationDelegate(this.OnEndRemoveUser);
            }
            if ((this.onRemoveUserCompletedDelegate == null)) {
                this.onRemoveUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveUserCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveUserDelegate, new object[] {
                        U_Id}, this.onEndRemoveUserDelegate, this.onRemoveUserCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WP9_DES.ServiceReference1.ISchedulerService CreateChannel() {
            return new SchedulerServiceClientChannel(this);
        }
        
        private class SchedulerServiceClientChannel : ChannelBase<WP9_DES.ServiceReference1.ISchedulerService>, WP9_DES.ServiceReference1.ISchedulerService {
            
            public SchedulerServiceClientChannel(System.ServiceModel.ClientBase<WP9_DES.ServiceReference1.ISchedulerService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginTestFun(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("TestFun", _args, callback, asyncState);
                return _result;
            }
            
            public string EndTestFun(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("TestFun", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTasksDueSoon(System.Collections.ObjectModel.ObservableCollection<string> GroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = GroupId;
                System.IAsyncResult _result = base.BeginInvoke("GetTasksDueSoon", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> EndGetTasksDueSoon(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> _result = ((System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task>)(base.EndInvoke("GetTasksDueSoon", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllTasks(System.Collections.ObjectModel.ObservableCollection<string> GroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = GroupId;
                System.IAsyncResult _result = base.BeginInvoke("GetAllTasks", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> EndGetAllTasks(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task> _result = ((System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Task>)(base.EndInvoke("GetAllTasks", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMyGroups(string UserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserId;
                System.IAsyncResult _result = base.BeginInvoke("GetMyGroups", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> EndGetMyGroups(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> _result = ((System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User>)(base.EndInvoke("GetMyGroups", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGroupMembers(string GroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = GroupId;
                System.IAsyncResult _result = base.BeginInvoke("GetGroupMembers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> EndGetGroupMembers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User> _result = ((System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.User>)(base.EndInvoke("GetGroupMembers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNearbyLocations(System.Device.Location.GeoCoordinate Coordinates, float Dist, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = Coordinates;
                _args[1] = Dist;
                System.IAsyncResult _result = base.BeginInvoke("GetNearbyLocations", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Location> EndGetNearbyLocations(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Location> _result = ((System.Collections.ObjectModel.ObservableCollection<WP9_DES.ServiceReference1.Location>)(base.EndInvoke("GetNearbyLocations", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddTask(WP9_DES.ServiceReference1.Task TheTask, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = TheTask;
                System.IAsyncResult _result = base.BeginInvoke("AddTask", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddTask(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddTask", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddUser(WP9_DES.ServiceReference1.User TheUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = TheUser;
                System.IAsyncResult _result = base.BeginInvoke("AddUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveTask(System.Guid TaskId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = TaskId;
                System.IAsyncResult _result = base.BeginInvoke("RemoveTask", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveTask(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveTask", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveUser(System.Guid U_Id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = U_Id;
                System.IAsyncResult _result = base.BeginInvoke("RemoveUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveUser", _args, result)));
                return _result;
            }
        }
    }
}
